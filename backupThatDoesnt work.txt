const API_KEY = 'api_key=ccce8287f51df54af80b83283695c531'
const url = 'https://api.themoviedb.org/3';
const API_URL = url + '/discover/movie?sort_by=popularity.desc&'
const options = {
  method: 'GET',
  headers: {
    accept: 'application/json',
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjY2NlODI4N2Y1MWRmNTRhZjgwYjgzMjgzNjk1YzUzMSIsIm5iZiI6MTcyMTQ5NzgzNy40MDI4OTQsInN1YiI6IjY2OWJmNmU0Y2U5NjhjMGRmYjRiOWQ0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.UBNY43dy5mjd_a-DEiVDxBfKjegegkHuD314zvZAUik'
  }
};
const accountId = '21393966' 

let totalHour = 0 

document.addEventListener('DOMContentLoaded', () => {

  const inputField = document.getElementById('inputfield');
  const dropdown = document.getElementById('dropdown');
  const url = 'https://api.themoviedb.org/3';
  const counterTime = document.getElementById('counter')
  const containerDiv = document.getElementById('container')
  const accountCalcBtn = document.getElementById('accountcalculatorBtn')

  inputField.addEventListener('keypress', async (event) => {
      if (event.key === 'Enter') {
          let textWithPercent20 = inputField.value.replace(/ /g, "%20");
          let urlQuery = `/search/multi?query=${textWithPercent20}`;
          let apiResult = await fetchDataApi(urlQuery);
          dropDownDisplay(apiResult.results)
      }
  });

  async function fetchDataApi(query) {
    try{
      const respones = await fetch(url + query, options)
      const data = await respones.json()
      return data
      
    }
    catch (err){
      console.error('error fetching api data', err)
      return []
    }

  }

  function dropDownDisplay(data) {
      dropdown.innerHTML = ''; // Clear previous results
      dropdown.style.display = 'block';
      for (let i = 0; i < data.length; i++) {
          
          let element = data[i];
          if (element.poster_path){

            let dropdownItem = document.createElement('div');
            dropdownItem.classList.add('dropdown-item');
  
            //console.log(element)
  
            let nameMedia = element.title
            let releaseDate = element.release_date
   
            if (element.media_type =="tv"){
                nameMedia = element.name
                releaseDate = element.first_air_date
               
            }
            dropdownItem.innerHTML = `
                <div class="poster">
                    <img src="https://image.tmdb.org/t/p/w92${element.poster_path}" alt="${nameMedia}">
                </div>
                <div class="details">
                    <h2>${nameMedia}</h2>
                    <p><strong>Release Date:</strong> ${releaseDate}</p>
                </div>`;
            dropdown.appendChild(dropdownItem);
  
            dropdownItem.addEventListener('click', async () => {
                // console.log(element.media_type, element.id)
                let runTime = await timerCalculator(element.media_type, element.id);
                console.log(runTime)
                addTime(runTime)
                
                saveDisplay(element.poster_path, element.id, nameMedia, runTime)
                dropdown.style.display = 'none';
                inputField.value = ''
            });
          }
      }
  }
  
  function saveDisplay(posterPath, id, name, mediaTime){
    let divElement = document.createElement('div')
    divElement.classList.add('movie-card')

    divElement.innerHTML = `
      <div class="poster" data-id="${id}" data-time="${mediaTime}">
        <img src="https://image.tmdb.org/t/p/w500${posterPath}" alt="${name}">
      </div>`;

    
    containerDiv.appendChild(divElement)


    divElement.addEventListener('click', () => {
      let timeHtmlEl = divElement.querySelector('.poster')
      console.log(timeHtmlEl)

      reduceTime(timeHtmlEl.dataset.time)
      console.log(timeHtmlEl.dataset.time)
      containerDiv.removeChild(divElement)

  });
  

  }

 

  async function timerCalculator(mediaType, id){
    let quary = mediaType == "tv" ? `/tv/${id}`: `/movie/${id}`
    let apiResult = await fetchDataApi(quary)
    console.log(apiResult)
    console.log(apiResult.number_of_episodes)
    console.log(apiResult.last_episode_to_air.runtime )
    console.log(apiResult.runtime )


    let timeMin = mediaType == "tv" ? apiResult.number_of_episodes * apiResult.last_episode_to_air.runtime : apiResult.runtime
    let tunredHours = timeMin / 60
    
    return tunredHours
 
  }
  function addTime(timeData){
    //console.log(timeData)
    
    totalHour += timeData 
    
    updateTime(totalHour)
  }
  function reduceTime(timeData){
    totalHour -= timeData
    updateTime(totalHour)
  }
  
  function updateTime(timeData){
    
    let timeResult = convertHours(timeData)
    counterTime.innerHTML = `
    <h1 id="counter">Days: ${timeResult.days}</h1>
    <h1 id="counter">Hours: ${timeResult.hours}</h1>
    <h1 id="counter">Minutes: ${timeResult.minutes}</h1>
    ` ;

  }
  

  async function accountIdData(page, mediaType){
    console.log(`/account/${accountId}/rated/${mediaType}?page=${page}&sort_by=created_at.asc`)
    return await fetchDataApi(`/account/${accountId}/rated/${mediaType}?page=${page}&sort_by=created_at.asc`)
    
  }

  accountCalcBtn.addEventListener('click', async () => {
    
    let mediaType = "tv"
    
    for (let i = 0; i < 2; i++) {

      let resultsMovies = await accountIdData(1,mediaType)
      console.log(resultsMovies)
  
      for (let pages = 1; pages <= resultsMovies.total_pages; pages++) {
        resultsMovies = await accountIdData(pages, mediaType)
  
        for (let index = 0; index < resultsMovies.results.length; index++) {
          const element = resultsMovies.results[index];
          let timeDataReturn = await timerCalculator(mediaType, element.id)
          

          let nameMedia = element.title
   
            if (element.media_type =="tv"){
                nameMedia = element.name
               
            }
          saveDisplay(element.poster_path, element.id, nameMedia,timeDataReturn)
          addTime(timeDataReturn)

          
          
        }    console.log(resultsMovies)
      }
      mediaType = "movies"

    }
      


  })
  document.addEventListener('click', (event) => {
    if (!event.target.closest('.search-container')) {
        dropdown.style.display = 'none';

    }
});

function convertHours(totalHours) {
  const days = Math.floor(totalHours / 24);
  const remainingHours = totalHours % 24;
  const hours = Math.floor(remainingHours);
  const minutes = Math.floor((remainingHours - hours) * 60);

  return { days, hours, minutes };
}
const result = convertHours(1000);
console.log(`${result.days} days, ${result.hours} hours, ${result.minutes} minutes`);
});



/**
 */